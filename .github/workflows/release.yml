name: release
on:
  push:
    # branches:
    #   - main
    tags:
      - v*
jobs:
  publish:
    #if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["6.0.x", "7.0.x"]
    steps:
      - name: Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Variables
        id: variables
        run: echo ::set-output name=version::$(git describe --tags --always --abbrev=0)
      - name: Setup .NET SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      # - name: Test
      #   run: dotnet test --no-restore --verbosity normal
      # - name: Move
      #   run: mv src/Jellyfin.Plugin.Prerolls/bin/*/*/Jellyfin.Plugin.Prerolls.dll .
      - name: Compress
        env:
          version: ${{ steps.variables.outputs.version }}
        run: zip jellyfin-plugin-prerolls-${version}.zip src/Jellyfin.Plugin.Prerolls/bin/Release/Jellyfin.Plugin.Prerolls.dll
      - name: Checksum
        env:
          version: ${{ steps.variables.outputs.version }}
        run: echo ::set-output name=checksum::$(md5sum jellyfin-plugin-prerolls-${version}.zip)
      # - name: Metadata
      #   uses: # TODO: read text files seperately
      #   id: changelog
      #   with:
      #     files: 'metadata/'
      #     pattern: '.*\.txt'
      - name: Manifest
        uses: jsdaniell/create-json@v1.2.2
        env:
          versions: ${{ [] }} # TODO: replace with processed versions and previous releases
        with:
          name: "manifest.json"
          json: '[{"guid": "40ebce45-fe78-4e84-b819-3a9f537da73c", "name": "Prerolls", "overview": "Display flashy prerolls before movies and other videos", "description": "Select a flashy video to run before any video content.", "owner": "clsop", "category": "Other", "versions": ${{ env.versions }}'
      - name: Publish
        uses: ncipollo/release-action@v1
        env:
          version: ${{ steps.variables.outputs.version }}
        with:
          artifacts: "*.zip,manifest.json"
          artifactContentType: zip
          tag: ${version}
          commit: ${{ github.sha }}
          token: ${{ github.token }}
          bodyFile: metadata/${version}.txt

